{
  "id": "test123",
  "title": "Building a Python Web API",
  "content": "USER: I want to build a web API in Python. What framework should I use?\n\nGPT: For building a web API in Python, I'd recommend FastAPI. It's modern, fast, and has excellent documentation. Here's a simple example:\n\n```python\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n```\n\nWould you like me to show you how to add more endpoints?\n\nUSER: Yes, how do I add POST endpoints?\n\nGPT: Here's how to add a POST endpoint:\n\n```python\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\nclass Item(BaseModel):\n    name: str\n    price: float\n\n@app.post(\"/items/\")\ndef create_item(item: Item):\n    return item\n```\n\nThis creates a POST endpoint that accepts JSON data.\n\nUSER: How do I handle database connections?\n\nGPT: For database connections, you can use SQLAlchemy with FastAPI. Here's an example:\n\n```python\nfrom sqlalchemy import create_engine\nfrom sqlalchemy.orm import sessionmaker\n\nengine = create_engine(\"sqlite:///./test.db\")\nSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n\ndef get_db():\n    db = SessionLocal()\n    try:\n        yield db\n    finally:\n        db.close()\n```\n\nThen you can inject the database session into your endpoints.\n\nUSER: What about authentication?\n\nGPT: For authentication, you can use JWT tokens. Here's a basic setup:\n\n```python\nfrom fastapi import Depends, HTTPException, status\nfrom fastapi.security import HTTPBearer\nimport jwt\n\nsecurity = HTTPBearer()\n\nasync def get_current_user(token: str = Depends(security)):\n    try:\n        payload = jwt.decode(token, SECRET_KEY, algorithms=[\"HS256\"])\n        return payload\n    except:\n        raise HTTPException(status_code=401)\n```\n\nThis gives you a basic authentication system.\n\nUSER: Thanks! This is really helpful.\n\nGPT: You're welcome! FastAPI is a great choice for building APIs. It has excellent performance, automatic documentation, and type checking. Good luck with your project!"
}
